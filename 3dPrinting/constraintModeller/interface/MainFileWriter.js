/*
 * author: Daniel Patterson
 *
 * Generates the main file (the point of entry) for the 3D Drawer, including 
 * user-editable parameters.
 */
var fs = require('fs')

module.exports.MainFileWriter = MainFileWriter

const MAIN_FILE_NAME = '../3dDrawer/main.jscad'
const STATIC_PARAMETER_DEFINITIONS = '../3dDrawer/parameterDefinitions.txt'

// A header comment for the generated file
const COMMENT_HEADER = '/*\n * [GENERATED FILE]\n *\n * This is the point of '
                       + 'entry for an OpenJSCAD 3D drawer generated by the '
                       + 'constraint\n * modelling aspect of this program.\n '
                       + '*/\n'

// Link the main file to the static parts of the 3D Drawer
const INCLUDES = 'include("Drawer.jscad")\n\n'

// The function that allows the 3D Drawer access to user input
const GET_PARAMS_START = 'function getParameterDefinitions() {\n\treturn ['
const GET_PARAMS_END = '];\n}\n\n'

const MAIN_METHOD = 'function main(params) {\n\t' 
                    + 'return Drawer.drawComponents(params)\n}'

function MainFileWriter() {

	this.generateMainFile = function(dynamicParameterDefinitions) {
		var content = buildFileContent(dynamicParameterDefinitions) 
		fs.writeFileSync(MAIN_FILE_NAME, content)

	}

	var buildFileContent = function(dynamicParameterDefinitions) {		
		var contents = COMMENT_HEADER + INCLUDES + GET_PARAMS_START
		contents += getStaticParameterDefinitions() + dynamicParameterDefinitions
		contents += GET_PARAMS_END + MAIN_METHOD
		return contents
	}

	var getStaticParameterDefinitions = function() {
		return fs.readFileSync(STATIC_PARAMETER_DEFINITIONS, 'utf8')
	}
}