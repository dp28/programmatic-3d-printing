/*
 * author: Daniel Patterson
 *
 * Translate Component Specifications into Specifications that are 
 * understandable by the 3D Drawer.
 */
var fs = require('fs')
var console = require('console')
var util = require('util')
var GearSpecification = require('../interface/GearSpecification.js').GearSpecification
var SpecificationComposer = require('../interface/SpecificationComposer.js').SpecificationComposer

module.exports.SpecificationWriter = SpecificationWriter

const SPECIFICATION_FILE_NAME = '../3dDrawer/Specification.jscad'

// A header comment for the generated file
const COMMENT_HEADER = '/*\n * [GENERATED FILE]\n *\n * This is a full '
                       + 'specification for a gear system generated by the '
                       + 'constraint\n * modelling aspect of this program.\n '
                       + '*/\n'

// A header to allow OpenJSCAD to use the generated file as a library
const LIBRARY_HEADER = 'Specification = function() {};\n\n'

// A prefix to allow OpenJSCAD access to the GearSpecifications
const GEAR_PREFIX = 'Specification.gears = '

// A suffix to make sure that the GearSpecification array is well-formed 
//OpenJSCAD
const GEAR_SUFFIX = ';'

function SpecificationWriter() {
	var specifications = []
	var composer = new SpecificationComposer()
 
	this.getSpecifications = function() {
		return specifications
	}

	this.addComponent = function(component) {
		specifications.push(composer.makeSpecification(component))
	}

	this.writeSpecificationToFile = function() {
		var string = COMMENT_HEADER + LIBRARY_HEADER + GEAR_PREFIX
		string += JSON.stringify(specifications, null, 2)
		string += GEAR_SUFFIX
		fs.writeFileSync(SPECIFICATION_FILE_NAME, string)
	}
}